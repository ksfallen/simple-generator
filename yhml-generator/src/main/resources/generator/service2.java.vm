package ${package.Service};

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.baomidou.mybatisplus.core.conditions.AbstractWrapper;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.conditions.update.UpdateWrapper;
import ${superServiceImplClassPackage};
import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
#if(${kotlin})
open class ${table.serviceName} : ${superServiceImplClass}<${table.mapperName}, ${entity}>(), ${table.serviceName} {

}
#else
public class ${table.serviceName} extends ${superServiceImplClass}<${table.mapperName}, ${entity}> {
  #foreach($item in ${cfg.mapper.entrySet()})
    #if(${item.key} == ${entity})
    @Autowired
    private ${table.mapper} ${item.value};
    #end
  #end

    public List<${entity}> listBy(${entity}Query query){
        QueryWrapper<${entity}> wrapper = query(query);
        return super.list(wrapper);
    }

    public <${entity}> getOne(${entity}Query query){
        QueryWrapper<${entity}> wrapper = query(query);
        return super.getOne(wrapper);
    }

    private QueryWrapper<${entity}> query(${entity}Query query) {
        QueryWrapper<${entity}> wrapper = new QueryWrapper<>();
        initWarpper(wrapper, query);
        return wrapper;
    }

    private UpdateWrapper<${entity}> update(${entity}Query query) {
        UpdateWrapper<${entity}> wrapper = new UpdateWrapper();
        initWarpper(wrapper, query);
        return wrapper;
    }

    /**
     * #foreach($field in ${table.fields})${field.name},#end
     */
    private void initWarpper(AbstractWrapper wrapper, ${entity} query) {
    #foreach($field in ${table.fields})
        #if(${field.propertyType.equals("boolean")})
            #set($getprefix="is")
        #else
            #set($getprefix="get")
        #end

        #if(${field.propertyType} == "String")
        if (StringUtils.isNotBlank(query.${getprefix}${field.capitalName}())) {
            wrapper.eq("${field.name}", query.${getprefix}${field.capitalName}());
        }
         #else
        if (query.${getprefix}${field.capitalName}() != null) {
            wrapper.eq("${field.name}", query.${getprefix}${field.capitalName}());
        }
        #end
    #end
    }
}
#end
